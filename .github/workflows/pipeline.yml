name: Simple CI with ESLint

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    # Frontend Installing Dependencies
    - name: Install frontend dependencies
      run: npm install
      working-directory: bloglist-frontend

    # Frotnend ESLint check
    - name: Run ESLint for frontend
      run: npm run lint
      working-directory: bloglist-frontend

    # Frontend tests
    - name: Run frontend tests
      run: npm run test
      working-directory: bloglist-frontend


  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # Setting up MongoDB with docker-compose
      - name: Set up MongoDB
        run: docker-compose -f docker-compose.dev.yml up -d mongodb
        working-directory: bloglist-backend

      # Setting up backend
      - name: Install backend dependencies
        run: npm install
        working-directory: bloglist-backend

      # Backend tests
      - name: Run backend tests with environment variables
        env:
          PORT: ${{ secrets.PORT }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          MONGODB_URI: ${{ secrets.MONGO_URI }}
          SECRET: ${{ secrets.SECRET }}
        working-directory: bloglist-backend
        run:
          npm run test

  e2e_testing:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install frontend dependencies
        run: npm install
        working-directory: bloglist-frontend

      - name: Install backend dependencies
        run: npm install
        working-directory: bloglist-backend

      - name: Set up MongoDB
        run: docker-compose -f bloglist-backend/docker-compose.dev.yml up -d mongodb

      - name: Start backend
        env:
          PORT: ${{ secrets.PORT }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          MONGODB_URI: ${{ secrets.MONGO_URI }}
          SECRET: ${{ secrets.SECRET }}
        run: npm run start:test &  # Run in background
        working-directory: bloglist-backend

      - name: Start frontend
        run: npm run dev &  # Run in background
        working-directory: bloglist-frontend

      - name: Wait for services to start
        run: sleep 10  # Adjust sleep duration as needed to allow services to start

      - name: Run Cypress tests
        run: npm run cypress:headless
        working-directory: bloglist-frontend

  deploy:
    name: Deploy app
    runs-on: ubuntu-20.04
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Frontend deployment preperation
        if: ${{ github.event_name == 'push' }}
        working-directory: bloglist-frontend
        run: npm install

      - name: Backend preperation + build + deployment
        if: ${{ github.event_name == 'push' }}
        working-directory: bloglist-backend
        run: |
          npm install
          npm run deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

